name: Test Documentation

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Build Dispatcher"]
    branches: [main]
    types:
      - completed
    paths:
      - 'containers/**'
      - 'docs/**'

jobs:
  test-docs:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        # NOTE: Mac OS and Windows tests are not included here because:
        #     - Mac OS: `--privileged` currently doesn't work due to M1/Colima restrictions
        #     - Windows: The `windows-latest` images doesn't allow testing linux based containers
        # In theory: this is less than ideal but should be fine since once we get inside the
        #     container our environments should be predictably the same
        # os: [ubuntu-latest, macos-latest, windows-latest]
        config:
          - { runtime: 'docker', oci: 'default', name: 'docker' }
          - { runtime: 'podman', oci: 'runc',    name: 'podman-runc' }
          - { runtime: 'podman', oci: 'crun',    name: 'podman-crun' }

    name: Test Docs (${{ matrix.os }} | ${{ matrix.config.name }})
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        run: uv python install
        shell: bash

      - name: Set up just
        uses: extractions/setup-just@v2

      - name: Set container environment
        run: echo "CONTAINER_ENV=${{ matrix.config.runtime }}" >> $GITHUB_ENV
        shell: bash

      - name: Set up Docker
        if: matrix.config.runtime == 'docker'
        uses: docker/setup-qemu-action@v3

      - name: Set up Podman
        if: matrix.config.runtime == 'podman'
        uses: gacts/install-podman@v1

      - name: Install crun and configure Podman
        if: matrix.config.oci == 'crun'
        run: |
          sudo apt-get install -y make git gcc build-essential pkgconf libtool \
            libsystemd-dev libprotobuf-c-dev libcap-dev libseccomp-dev libyajl-dev \
            go-md2man autoconf python3 automake
          git clone https://github.com/containers/crun
          cd crun
          git pull
          ./autogen.sh
          ./configure
          make
          sudo make install
          cd ..
          sudo mkdir -p /etc/containers
          echo '[engine]' | sudo tee /etc/containers/containers.conf
          echo 'runtime = "crun"' | sudo tee -a /etc/containers/containers.conf
        shell: bash

      - name: Log in to GHCR (Docker)
        if: matrix.config.runtime == 'docker'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to GHCR (Podman)
        if: matrix.config.runtime == 'podman'
        uses: redhat-actions/podman-login@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run doc tests
        run: uv run ./utils/test_code_blocks.py
        shell: bash

      - name: Upload results on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test_results-${{ matrix.os }}-${{ matrix.config.name }}
          path: ${{ github.workspace }}/docs/test_results.md
