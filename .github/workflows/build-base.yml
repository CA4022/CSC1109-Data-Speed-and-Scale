name: Build and Push Base Container

on:
  push:
    branches:
      - main
    paths:
      - 'containers/base/**'
      - '.github/workflows/build-base.yml'
      - '.env'

jobs:
  build-test-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install just
        uses: extractions/setup-just@v2
        with:
          just-version: 1.40.0

      - name: Load .env file
        uses: xom9ikk/dotenv@v2
        with:
          path: ./

      - name: Set container environment
        run: |
          echo "CONTAINER_ENV=docker" >> $GITHUB_ENV

      - name: Define image name and tag
        id: meta
        run: |
          REPO_URL="ghcr.io/${{ github.repository_owner }}"
          VERSION_TAG=$(just base get_tag)
          LATEST_TAG="${{ env.BASE_CONTAINER_NAME }}:latest"
          echo "VERSION_TAG_LOCAL=$VERSION_TAG" >> $GITHUB_ENV
          echo "VERSION_TAG_REMOTE=$REPO_URL/$VERSION_TAG" >> $GITHUB_ENV
          echo "LATEST_TAG_REMOTE=$REPO_URL/$LATEST_TAG" >> $GITHUB_ENV

      - name: Check if remote tag exists
        id: check_tag
        run: |
          if docker pull ${{ env.VERSION_TAG_REMOTE }}; then
            echo "Tag ${{ env.VERSION_TAG_REMOTE }} already exists."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Tag ${{ env.VERSION_TAG_REMOTE }} does not exist. Proceeding to push."
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        if: steps.check_tag.outputs.exists == 'false'
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: steps.check_tag.outputs.exists == 'false'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container image for testing
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          just base build

      - name: Test container image
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          just base test

      - name: Tag and push container image to GHCR
        if: (steps.check_tag.outputs.exists == 'false') && success()
        run: |
          echo "Tagging and pushing image to ghcr.io..."
          docker tag ${{ env.VERSION_TAG_LOCAL }} ${{ env.VERSION_TAG_REMOTE }}
          docker tag ${{ env.VERSION_TAG_REMOTE }} ${{ env.LATEST_TAG_REMOTE }}
          docker push ${{ env.VERSION_TAG_REMOTE }}
          docker push ${{ env.LATEST_TAG_REMOTE }}
          echo "Image pushed successfully."
