version: "3.8"

x-hadoop-common-config: &hadoop-common-config
  image: ${HADOOP_RUNNER_IMAGE}:${HADOOP_RUNNER_VERSION}
  volumes:
    - /lab/:/lab/
    - /opt/hadoop/:${HADOOP_HOME}
    - ./config/:${HADOOP_HOME}/etc/hadoop/

x-spark-common-config: &spark-common-config
  image: ${SPARK_IMAGE}:${SPARK_VERSION}
  volumes:
    - /lab/:/lab/
    - ./config/:/var/config/hadoop/

x-hive-common-config: &hive-common-config
  image: ${HIVE_IMAGE}:${HIVE_VERSION}
  volumes:
    - /lab/:/lab/
    - ./config:${HIVE_HOME}/conf
    - ./hive-init/:/init/
    - /opt/hive/lib/postgresql.jar:/opt/hive/lib/postgresql.jar

services:
  namenode:
    <<: *hadoop-common-config
    hostname: namenode
    command: ["/opt/hadoop/bin/hdfs", "namenode"]
    ports:
      - 9870:9870
    environment:
      - HADOOP_HOME=${HADOOP_HOME}
      - HADOOP_USER_NAME=${HADOOP_USER_NAME}
      - HADOOP_OPTS=--add-opens=java.base/java.lang=ALL-UNNAMED
      - ENSURE_NAMENODE_DIR=/tmp/hadoop-root/dfs/name
    healthcheck:
      test: ["CMD", "curl", "-f", "http://namenode:9870"]
      interval: 10s
      timeout: 5s
      retries: 5

  datanode:
    <<: *hadoop-common-config
    command: ["/opt/hadoop/bin/hdfs", "datanode"]
    environment:
      - HADOOP_HOME=${HADOOP_HOME}
      - HADOOP_USER_NAME=${HADOOP_USER_NAME}
      - HADOOP_OPTS=--add-opens=java.base/java.lang=ALL-UNNAMED
    deploy:
      mode: replicated
      replicas: 4
    depends_on:
      namenode:
        condition: service_healthy

  spark-master:
    <<: *spark-common-config
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.master.Master
    environment:
      - HADOOP_HOME=${HADOOP_HOME}
      - HADOOP_USER_NAME=${HADOOP_USER_NAME}
      - HADOOP_OPTS=--add-opens=java.base/java.lang=ALL-UNNAMED
    ports:
      - "8080:8080"

  spark-worker:
    <<: *spark-common-config
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    environment:
      - HADOOP_HOME=${HADOOP_HOME}
      - HADOOP_USER_NAME=${HADOOP_USER_NAME}
      - HADOOP_OPTS=--add-opens=java.base/java.lang=ALL-UNNAMED
    depends_on:
      - spark-master
    links:
      - spark-master
    deploy:
      mode: replicated
      replicas: 4

  postgres:
    image: docker.io/library/postgres:17.5
    hostname: postgres
    environment:
      POSTGRES_DB: metastore
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  hive-init:
    <<: *hive-common-config
    hostname: hive-init
    entrypoint: /init/init
    environment:
      - HADOOP_HOME=${HADOOP_HOME}
      - HADOOP_USER_NAME=${HADOOP_USER_NAME}
      - HIVE_USER_NAME=${HADOOP_USER_NAME}
      - HIVE_HOME=${HIVE_HOME}
    depends_on:
      postgres:
        condition: service_healthy
      namenode:
        condition: service_healthy

  metastore:
    <<: *hive-common-config
    hostname: metastore
    entrypoint: hive --skiphadoopversion --skiphbasecp --service metastore
    environment:
      - HADOOP_HOME=${HADOOP_HOME}
      - HADOOP_USER_NAME=${HADOOP_USER_NAME}
      - HIVE_HOME=${HIVE_HOME}
      - METASTORE_PORT=9083
    depends_on:
      hive-init:
        condition: service_completed_successfully
      namenode:
        condition: service_healthy
    ports:
      - "9083:9083"

  hiveserver:
    <<: *hive-common-config
    hostname: hiveserver
    entrypoint: hive --skiphadoopversion --skiphbasecp --service hiveserver2
    environment:
      - HADOOP_HOME=${HADOOP_HOME}
      - HADOOP_USER_NAME=${HADOOP_USER_NAME}
      - HIVE_HOME=${HIVE_HOME}
      - HIVESERVER2_PID_DIR=/tmp/hive
    depends_on:
      metastore:
        condition: service_started
      namenode:
        condition: service_healthy
      spark-master:
        condition: service_started
    ports:
      - "10000:10000"

  client:
    image: ghcr.io/ca4022/csc1109-lab6-client
    environment:
      - SHELL=bash
      - HADOOP_HOME=${HADOOP_HOME}
      - HADOOP_USER_NAME=${HADOOP_USER_NAME}
      - HADOOP_OPTS=--add-opens=java.base/java.lang=ALL-UNNAMED
      - HIVE_HOME=${HIVE_HOME}
      - HIVE_USER_NAME=${HIVE_USER_NAME}
    ports:
      - 8888:8888
    depends_on:
      namenode:
        condition: service_healthy
      spark-master:
        condition: service_started
    links:
      - spark-master
    working_dir: /lab/
    volumes:
      - /lab/:/lab/
      - ./config/:${HADOOP_HOME}/etc/hadoop/
      - /opt/hive:${HIVE_HOME}
      - ./config:${HIVE_HOME}/conf
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD-SHELL", "/etc/jupyter/docker_healthcheck.py || exit 1"]
      interval: 3s
      timeout: 1s
      start_period: 3s
      retries: 3
